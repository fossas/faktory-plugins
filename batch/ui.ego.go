// Generated by ego.
// DO NOT EDIT

//line batch/ui.ego:1

package batch

import "fmt"
import "html"
import "io"
import "context"

import (
	"net/http"

	"reflect"

	"github.com/fossas/faktory-plugins/ui"
)

func ego_batch(w io.Writer, req *http.Request, batch *batch) {
	ui.Ego_layout(w, req, func() {
		v := reflect.ValueOf(*batch.Meta)
		typeOfS := v.Type()

//line batch/ui.ego:17
		_, _ = io.WriteString(w, "\n<header class=\"row\">\n  <div class=\"col-5\">\n    <h3>Batch ")
//line batch/ui.ego:19
		_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Id)))
//line batch/ui.ego:19
		_, _ = io.WriteString(w, "</h3>\n  </div>\n</header>\n<h4>Metadata</h4>\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-bordered table-light\">\n    <thead>\n    <tr>\n      <th>Property</th>\n      <th>Value</th>\n    </tr>\n    </thead>\n    <tbody>\n    ")
//line batch/ui.ego:32
		for i := 0; i < v.NumField(); i++ {
//line batch/ui.ego:33
			_, _ = io.WriteString(w, "\n    <tr>\n      <td>")
//line batch/ui.ego:34
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(typeOfS.Field(i).Name)))
//line batch/ui.ego:34
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:35
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(v.Field(i).Interface())))
//line batch/ui.ego:35
			_, _ = io.WriteString(w, "</td>\n    </tr>\n    ")
//line batch/ui.ego:37
		}
//line batch/ui.ego:38
		_, _ = io.WriteString(w, "\n    </tbody>\n\n  </table>\n</div>\n<h4>Children</h4>\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-bordered table-light\">\n    <thead>\n    <tr>\n      <th>Batch ID</th>\n    </tr>\n    </thead>\n    <tbody>\n    ")
//line batch/ui.ego:51
		for _, b := range batch.Children {
//line batch/ui.ego:52
			_, _ = io.WriteString(w, "\n    <tr>\n      <td><a href=\"")
//line batch/ui.ego:53
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(ui.Relative(req, b.Id))))
//line batch/ui.ego:53
			_, _ = io.WriteString(w, "\">")
//line batch/ui.ego:53
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(b.Id)))
//line batch/ui.ego:53
			_, _ = io.WriteString(w, "</a></td>\n    </tr>\n    ")
//line batch/ui.ego:55
		}
//line batch/ui.ego:56
		_, _ = io.WriteString(w, "\n    </tbody>\n\n  </table>\n</div>\n<h4>Parents</h4>\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-bordered table-light\">\n    <thead>\n    <tr>\n      <th>Batch ID</th>\n    </tr>\n    </thead>\n    <tbody>\n    ")
//line batch/ui.ego:69
		for _, b := range batch.Parents {
//line batch/ui.ego:70
			_, _ = io.WriteString(w, "\n    <tr>\n      <td><a href=\"")
//line batch/ui.ego:71
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(ui.Relative(req, b.Id))))
//line batch/ui.ego:71
			_, _ = io.WriteString(w, "\">")
//line batch/ui.ego:71
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(b.Id)))
//line batch/ui.ego:71
			_, _ = io.WriteString(w, "</a></td>\n    </tr>\n    ")
//line batch/ui.ego:73
		}
//line batch/ui.ego:74
		_, _ = io.WriteString(w, "\n    </tbody>\n\n  </table>\n</div>\n")
//line batch/ui.ego:78

	})
}

func ego_batches(w io.Writer, req *http.Request, batchManager *batchManager) {
	ui.Ego_layout(w, req, func() {
//line batch/ui.ego:84
		_, _ = io.WriteString(w, "\n\n<header class=\"row\">\n  <div class=\"col-5\">\n    <h3>Batches</h3>\n  </div>\n</header>\n\n<div class=\"table-responsive\">\n  <table class=\"table table-striped table-bordered table-light\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Total Jobs</th>\n        <th>Succeed Jobs</th>\n        <th>Pending Jobs</th>\n        <th>Failed Jobs</th>\n        <th>Succeeded Jobs</th>\n        <th>Committed</th>\n        <th>Child Count</th>\n        <th>Parent Count</th>\n      </tr>\n    </thead>\n    <tbody>\n    ")
//line batch/ui.ego:107
		for _, batch := range batchManager.Batches {
//line batch/ui.ego:108
			_, _ = io.WriteString(w, "\n    <tr>\n      <td><a href=\"")
//line batch/ui.ego:109
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(ui.Relative(req, fmt.Sprintf("batches/%s", batch.Id)))))
//line batch/ui.ego:109
			_, _ = io.WriteString(w, "\">")
//line batch/ui.ego:109
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Id)))
//line batch/ui.ego:109
			_, _ = io.WriteString(w, "</a></td>\n      <td>")
//line batch/ui.ego:110
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Total)))
//line batch/ui.ego:110
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:111
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Succeeded)))
//line batch/ui.ego:111
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:112
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Pending)))
//line batch/ui.ego:112
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:113
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Failed)))
//line batch/ui.ego:113
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:114
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Succeeded)))
//line batch/ui.ego:114
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:115
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(batch.Meta.Committed)))
//line batch/ui.ego:115
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:116
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(len(batch.Children))))
//line batch/ui.ego:116
			_, _ = io.WriteString(w, "</td>\n      <td>")
//line batch/ui.ego:117
			_, _ = io.WriteString(w, html.EscapeString(fmt.Sprint(len(batch.Parents))))
//line batch/ui.ego:117
			_, _ = io.WriteString(w, "</td>\n    </tr>\n    ")
//line batch/ui.ego:119
		}
//line batch/ui.ego:120
		_, _ = io.WriteString(w, "\n    </tbody>\n\n  </table>\n</div>\n")
//line batch/ui.ego:124
	})
//line batch/ui.ego:125
	_, _ = io.WriteString(w, "\n")
//line batch/ui.ego:125
}

var _ fmt.Stringer
var _ io.Reader
var _ context.Context
var _ = html.EscapeString
